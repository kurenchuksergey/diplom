version: '3.6'

x-consul: &consul
  image: consul:latest
  volumes:
  - consul:/consul

volumes:
  consul:

services:
  manager:
    image: kurenchuksergey/diplomservice
    depends_on:
    - client
    - postgres
    ports:
      - "8100:8100"
    environment:
      - oauth_client_id=client_id
      - oauth_client_secret=client_secter
      - port=8100
    deploy:
      placement:
        constraints: [node.role == manager]

  worker:
    image: kurenchuksergey/diplomservice
    depends_on:
      - client
      - postgres
      - manager
    environment:
      - profile=worker
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == worker]

  client-consul:
    <<: *consul
    command: "agent -retry-join server-bootstrap -client 0.0.0.0 -bind '{{ GetInterfaceIP \"eth0\" }}'"
    depends_on:
    -  server-bootstrap
    deploy:
      replicas: 2
      placement:
              constraints: [node.role == worker]
#    networks:
#      - default_net

  server:
    <<: *consul
    ports:
      - "8500:8500"
      - "8300:8300"
      - "8400:8400"
      - "8301:8301/tcp"
      - "8302:8302/tcp"
      - "8301:8301/udp"
      - "8302:8302/udp"
    depends_on:
      - server-bootstrap
    command: "agent -server -retry-join server-bootstrap -client 0.0.0.0 -bind '{{ GetInterfaceIP \"eth0\" }}' -ui"
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == manager]

  server-bootstrap:
    image: consul
    command: "agent -server -bootstrap-expect 3 -client 0.0.0.0 -bind '{{ GetInterfaceIP \"eth0\" }}'"
    deploy:
      placement:
        constraints: [node.role == manager]

  visualizer:
    image: dockersamples/visualizer:stable
    networks:
      - default_net
    ports:
      - "8080:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
  rabbitmq:
    image: rajeevshukla/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - "AUTOCLUSTER_TYPE=consul"
      - "CONSUL_HOST=client-consul"
      - "CONSUL_PORT=8500"
      - "CONSUL_SVC=rabbitmq"
      - "CONSUL_SVC_ADDR_AUTO=true"
      - "AUTOCLUSTER_CLEANUP=true"
      - "CLEANUP_WARN_ONLY=false"
      - "RABBITMQ_ERLANG_COOKIE=secrect"

  postgres:
    image: postgres:11.1
    hostname: localhost
    networks:
      - default_net
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: diplom
      POSTGRES_PASSWORD: diplom
      POSTGRES_DB: diplomDb
      PGDATA: /var/lib/postgresql/data/pgdata/diplom
#    command: "curl -s -XPUT -d \"{\"Name\": \"postgres\",\"ID\": \"postgres\",\"Tags\": [ \"postgres\" ],\"Address\": \"localhost\", \"Port\": 5432, \"Check\": { \"Name\": \"PostgreSQL TCP on port 5432\", \"ID\": \"postgres\", \"Interval\": \"10s\", \"TCP\": \"postgres:5432\",\"Timeout\": \"1s\",\"Status\": \"passing\"}}\" localhost:8500/v1/agent/service/register"
#    depends_on:
#      - client
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
#      restart_policy:
#              condition: on-failure
networks:
  default_net: